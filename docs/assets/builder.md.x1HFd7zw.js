import{_ as e,c as a,o as d,ag as r}from"./chunks/framework.8SQNO8WI.js";const p=JSON.parse('{"title":"@technobuddha/builder","description":"","frontmatter":{},"headers":[],"relativePath":"builder.md","filePath":"builder.md"}'),i={name:"builder.md"};function o(n,t,s,c,h,l){return d(),a("div",null,[...t[0]||(t[0]=[r('<p><a href="./">@technobuddha</a> / builder</p><h1 id="technobuddha-builder" tabindex="-1">@technobuddha/builder <a class="header-anchor" href="#technobuddha-builder" aria-label="Permalink to &quot;@technobuddha/builder&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The documentation for this package is under construction. At this time there is not much that has been written for this package, almost all content is automatically generated from the source code.</p></div><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type Alias</th><th>Description</th></tr></thead><tbody><tr><td><a href="./builder/ExecException.html">ExecException</a></td><td>Represents an exception thrown during the execution of a child process. Extends the standard <code>Error</code> object with additional properties specific to process execution.</td></tr><tr><td><a href="./builder/Project.html">Project</a></td><td>Represents a project configuration with associated metadata and build steps.</td></tr></tbody></table><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td><a href="./builder/display.html">display</a></td><td>Displays a formatted message with a timestamp, a name, and a colored message.</td></tr><tr><td><a href="./builder/main.html">main</a></td><td>Builds projects and optionally starts watchers based on command-line arguments.</td></tr><tr><td><a href="./builder/out.html">out</a></td><td>Writes each provided string argument to the standard output without adding a newline.</td></tr></tbody></table>',7)])])}const b=e(i,[["render",o]]);export{p as __pageData,b as default};
