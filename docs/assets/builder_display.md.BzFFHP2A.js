import{_ as a,c as i,o as t,ag as e}from"./chunks/framework.8SQNO8WI.js";const c=JSON.parse('{"title":"Function: display()","description":"","frontmatter":{},"headers":[],"relativePath":"builder/display.md","filePath":"builder/display.md"}'),n={name:"builder/display.md"};function d(l,s,h,r,p,k){return t(),i("div",null,[...s[0]||(s[0]=[e(`<p><a href="./../">@technobuddha</a> / <a href="./../builder.html">builder</a> / display</p><h1 id="function-display" tabindex="-1">Function: display() <a class="header-anchor" href="#function-display" aria-label="Permalink to &quot;Function: display()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">   name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">   color1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ChalkInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">   message1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ...</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">   args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ChalkInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/builder/blob/main/src/display.ts#L21" target="_blank" rel="noreferrer">display.ts:21</a></p><p>Displays a formatted message with a timestamp, a name, and a colored message.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>name</code></td><td><code>string</code></td><td>The name or label to display, padded to 30 characters.</td></tr><tr><td><code>color1</code></td><td><code>ChalkInstance</code></td><td>-</td></tr><tr><td><code>message1</code></td><td><code>string</code></td><td>-</td></tr><tr><td>...<code>args</code></td><td>(<code>string</code> | <code>ChalkInstance</code>)[]</td><td>-</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>void</code></p>`,9)])])}const g=a(n,[["render",d]]);export{c as __pageData,g as default};
