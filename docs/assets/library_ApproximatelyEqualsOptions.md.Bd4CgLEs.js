import{_ as t,c as e,o as s,ag as i}from"./chunks/framework.8SQNO8WI.js";const y=JSON.parse('{"title":"Type Alias: ApproximatelyEqualsOptions","description":"","frontmatter":{},"headers":[],"relativePath":"library/ApproximatelyEqualsOptions.md","filePath":"library/ApproximatelyEqualsOptions.md"}'),r={name:"library/ApproximatelyEqualsOptions.md"};function p(l,a,n,o,h,d){return s(),e("div",null,[...a[0]||(a[0]=[i(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_math.html">Math</a> &gt; <a href="./index_math_comparison.html">Comparison</a></p><h1 id="type-alias-approximatelyequalsoptions" tabindex="-1">Type Alias: ApproximatelyEqualsOptions <a class="header-anchor" href="#type-alias-approximatelyequalsoptions" aria-label="Permalink to &quot;Type Alias: ApproximatelyEqualsOptions&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ApproximatelyEqualsOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  tolerance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/approximately-equals.ts#L6" target="_blank" rel="noreferrer">approximately-equals.ts:6</a></p><p>Options for the <a href="./approximatelyEquals.html">approximatelyEquals</a> function</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Description</th><th>Defined in</th></tr></thead><tbody><tr><td><a id="tolerance"></a> <code>tolerance?</code></td><td><code>number</code></td><td>Tolerance range. If specified, should be greater than 0.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/approximately-equals.ts#L8" target="_blank" rel="noreferrer">src/approximately-equals.ts:8</a></td></tr></tbody></table>`,7)])])}const m=t(r,[["render",p]]);export{y as __pageData,m as default};
