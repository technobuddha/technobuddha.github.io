import{_ as i,c as e,o as n,ag as s}from"./chunks/framework.8SQNO8WI.js";const y=JSON.parse('{"title":"Type Alias: BinaryEncoding","description":"","frontmatter":{},"headers":[],"relativePath":"library/BinaryEncoding.md","filePath":"library/BinaryEncoding.md"}'),t={name:"library/BinaryEncoding.md"};function r(l,a,h,o,d,p){return n(),e("div",null,[...a[0]||(a[0]=[s('<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_binary.html">Binary</a> &gt; <a href="./index_binary_encoding.html">Encoding</a></p><h1 id="type-alias-binaryencoding" tabindex="-1">Type Alias: BinaryEncoding <a class="header-anchor" href="#type-alias-binaryencoding" aria-label="Permalink to &quot;Type Alias: BinaryEncoding&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BinaryEncoding</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;base64&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;base64url&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hex&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/@types/binary-encoding.ts#L8" target="_blank" rel="noreferrer">@types/binary-encoding.ts:8</a></p><p>Formats for binary encoding</p><h2 id="see" tabindex="-1">See <a class="header-anchor" href="#see" aria-label="Permalink to &quot;See&quot;">​</a></h2><ul><li><a href="./encodeBinary.html">encodeBinary</a></li><li><a href="./decodeBinary.html">decodeBinary</a></li></ul>',7)])])}const k=i(t,[["render",r]]);export{y as __pageData,k as default};
