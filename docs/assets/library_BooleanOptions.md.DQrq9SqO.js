import{_ as e,c as t,o as s,ag as i}from"./chunks/framework.8SQNO8WI.js";const c=JSON.parse('{"title":"Type Alias: BooleanOptions","description":"","frontmatter":{},"headers":[],"relativePath":"library/BooleanOptions.md","filePath":"library/BooleanOptions.md"}'),r={name:"library/BooleanOptions.md"};function n(l,a,o,h,p,d){return s(),t("div",null,[...a[0]||(a[0]=[i(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_object.html">Object</a> &gt; <a href="./index_object_conversion.html">Conversion</a></p><h1 id="type-alias-booleanoptions" tabindex="-1">Type Alias: BooleanOptions <a class="header-anchor" href="#type-alias-booleanoptions" aria-label="Permalink to &quot;Type Alias: BooleanOptions&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BooleanOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  falseValues</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Iterable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RegExp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  trueValues</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Iterable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RegExp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/to-boolean.ts#L8" target="_blank" rel="noreferrer">to-boolean.ts:8</a></p><p>Options for the <a href="./toBoolean.html">toBoolean</a> function</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Description</th><th>Defined in</th></tr></thead><tbody><tr><td><a id="falsevalues"></a> <code>falseValues?</code></td><td><a href="https://www.typescriptlang.org/docs/handbook/iterators-and-generators.html#iterable-interface" target="_blank" rel="noreferrer"><code>Iterable</code></a>&lt; | <code>string</code> | <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp" target="_blank" rel="noreferrer"><code>RegExp</code></a>&gt;</td><td>An iterable list of values that are &quot;false&quot;</td><td><a href="https://github.com/technobuddha/library/blob/main/src/to-boolean.ts#L12" target="_blank" rel="noreferrer">src/to-boolean.ts:12</a></td></tr><tr><td><a id="truevalues"></a> <code>trueValues?</code></td><td><a href="https://www.typescriptlang.org/docs/handbook/iterators-and-generators.html#iterable-interface" target="_blank" rel="noreferrer"><code>Iterable</code></a>&lt; | <code>string</code> | <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp" target="_blank" rel="noreferrer"><code>RegExp</code></a>&gt;</td><td>An iterable list of values that are &quot;true&quot;</td><td><a href="https://github.com/technobuddha/library/blob/main/src/to-boolean.ts#L10" target="_blank" rel="noreferrer">src/to-boolean.ts:10</a></td></tr></tbody></table>`,7)])])}const b=e(r,[["render",n]]);export{c as __pageData,b as default};
