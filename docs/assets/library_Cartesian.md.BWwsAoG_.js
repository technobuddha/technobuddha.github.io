import{_ as t,c as e,o as s,ag as i}from"./chunks/framework.8SQNO8WI.js";const y=JSON.parse('{"title":"Type Alias: Cartesian","description":"","frontmatter":{},"headers":[],"relativePath":"library/Cartesian.md","filePath":"library/Cartesian.md"}'),r={name:"library/Cartesian.md"};function n(h,a,l,d,p,o){return s(),e("div",null,[...a[0]||(a[0]=[i(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_geometry.html">Geometry</a> &gt; <a href="./index_geometry_coordinates.html">Coordinates</a></p><h1 id="type-alias-cartesian" tabindex="-1">Type Alias: Cartesian <a class="header-anchor" href="#type-alias-cartesian" aria-label="Permalink to &quot;Type Alias: Cartesian&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Cartesian</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/@types/geometry.ts#L6" target="_blank" rel="noreferrer">@types/geometry.ts:6</a></p><p>Represents a point in 2D Cartesian coordinate space.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Description</th><th>Defined in</th></tr></thead><tbody><tr><td><a id="x"></a> <code>x</code></td><td><code>number</code></td><td>The x-coordinate value.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/@types/geometry.ts#L8" target="_blank" rel="noreferrer">src/@types/geometry.ts:8</a></td></tr><tr><td><a id="y"></a> <code>y</code></td><td><code>number</code></td><td>The y-coordinate value.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/@types/geometry.ts#L10" target="_blank" rel="noreferrer">src/@types/geometry.ts:10</a></td></tr></tbody></table>`,7)])])}const k=t(r,[["render",n]]);export{y as __pageData,k as default};
