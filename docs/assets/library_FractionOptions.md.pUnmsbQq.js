import{_ as i,c as s,o as a,ag as e}from"./chunks/framework.8SQNO8WI.js";const k=JSON.parse('{"title":"Type Alias: FractionOptions","description":"","frontmatter":{},"headers":[],"relativePath":"library/FractionOptions.md","filePath":"library/FractionOptions.md"}'),n={name:"library/FractionOptions.md"};function r(o,t,h,d,l,p){return a(),s("div",null,[...t[0]||(t[0]=[e(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_math.html">Math</a> &gt; <a href="./index_math_verbalization.html">Verbalization</a></p><h1 id="type-alias-fractionoptions" tabindex="-1">Type Alias: FractionOptions <a class="header-anchor" href="#type-alias-fractionoptions" aria-label="Permalink to &quot;Type Alias: FractionOptions&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FractionOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  and</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Numbering</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;and&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  denominators</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Numbering</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;denominators&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  hyphen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Numbering</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hyphen&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  ordinal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Numbering</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ordinal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  output</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;numeric&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;alphabetic&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hybrid&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Numbering</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;output&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  precision</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Numbering</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;precision&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  shift</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Numbering</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;shift&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  tolerance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Numbering</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tolerance&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/fraction.ts#L9" target="_blank" rel="noreferrer">fraction.ts:9</a></p><p>Options for customizing the output and behavior of fraction number representations.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Default value</th><th>Description</th><th>Defined in</th></tr></thead><tbody><tr><td><a id="and"></a> <code>and?</code></td><td><a href="./Numbering.html"><code>Numbering</code></a>[<code>&quot;and&quot;</code>]</td><td><code>(empty string)</code></td><td>Text to use for &quot;and&quot; in compound numbers (e.g., &quot;one hundred and one&quot;).</td><td><a href="https://github.com/technobuddha/library/blob/main/src/fraction.ts#L20" target="_blank" rel="noreferrer">src/fraction.ts:20</a></td></tr><tr><td><a id="denominators"></a> <code>denominators?</code></td><td><a href="./Numbering.html"><code>Numbering</code></a>[<code>&quot;denominators&quot;</code>]</td><td><code>&#39;common&#39;</code></td><td>Type of denominators to use when expressing fractions.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/fraction.ts#L38" target="_blank" rel="noreferrer">src/fraction.ts:38</a></td></tr><tr><td><a id="hyphen"></a> <code>hyphen?</code></td><td><a href="./Numbering.html"><code>Numbering</code></a>[<code>&quot;hyphen&quot;</code>]</td><td><code>&#39; &#39; (space)</code></td><td>Text to use for hyphens in compound numbers (e.g., &quot;twenty-one&quot;).</td><td><a href="https://github.com/technobuddha/library/blob/main/src/fraction.ts#L26" target="_blank" rel="noreferrer">src/fraction.ts:26</a></td></tr><tr><td><a id="ordinal"></a> <code>ordinal?</code></td><td><a href="./Numbering.html"><code>Numbering</code></a>[<code>&quot;ordinal&quot;</code>]</td><td><code>false</code></td><td>Whether to output ordinal numbers (e.g., &quot;first&quot;, &quot;second&quot;) instead of cardinal numbers.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/fraction.ts#L50" target="_blank" rel="noreferrer">src/fraction.ts:50</a></td></tr><tr><td><a id="output"></a> <code>output?</code></td><td>| <code>&quot;numeric&quot;</code> | <code>&quot;alphabetic&quot;</code> | <code>&quot;hybrid&quot;</code> | <a href="./Numbering.html"><code>Numbering</code></a>[<code>&quot;output&quot;</code>]</td><td><code>&#39;alphabetic&#39;</code></td><td>Output format for the number representation.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/fraction.ts#L14" target="_blank" rel="noreferrer">src/fraction.ts:14</a></td></tr><tr><td><a id="precision"></a> <code>precision?</code></td><td><a href="./Numbering.html"><code>Numbering</code></a>[<code>&quot;precision&quot;</code>]</td><td><code>9</code></td><td>Precision for decimal/fraction conversion.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/fraction.ts#L44" target="_blank" rel="noreferrer">src/fraction.ts:44</a></td></tr><tr><td><a id="shift"></a> <code>shift?</code></td><td><a href="./Numbering.html"><code>Numbering</code></a>[<code>&quot;shift&quot;</code>]</td><td><code>undefined</code></td><td>Whether to shift the fractional part of the number.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/fraction.ts#L56" target="_blank" rel="noreferrer">src/fraction.ts:56</a></td></tr><tr><td><a id="tolerance"></a> <code>tolerance?</code></td><td><a href="./Numbering.html"><code>Numbering</code></a>[<code>&quot;tolerance&quot;</code>]</td><td><code>0.01</code></td><td>Tolerance for floating-point comparison when converting decimals to fractions.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/fraction.ts#L32" target="_blank" rel="noreferrer">src/fraction.ts:32</a></td></tr></tbody></table>`,7)])])}const u=i(n,[["render",r]]);export{k as __pageData,u as default};
