import{_ as e,c as t,o as s,ag as i}from"./chunks/framework.8SQNO8WI.js";const b=JSON.parse('{"title":"Abstract Class: HashBase","description":"","frontmatter":{},"headers":[],"relativePath":"library/HashBase.md","filePath":"library/HashBase.md"}'),r={name:"library/HashBase.md"};function h(n,a,d,o,l,c){return s(),t("div",null,[...a[0]||(a[0]=[i('<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_binary.html">Binary</a> &gt; <a href="./index_binary_hash.html">Hash</a></p><h1 id="abstract-class-hashbase" tabindex="-1">Abstract Class: HashBase <a class="header-anchor" href="#abstract-class-hashbase" aria-label="Permalink to &quot;Abstract Class: HashBase&quot;">​</a></h1><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/hash-base.ts#L19" target="_blank" rel="noreferrer">hash-base.ts:19</a></p><p>Abstract base class for hash algorithm implementations.</p><p>Provides a standard interface for updating hash state with data and retrieving the final digest in various formats. Concrete subclasses must implement the <code>update</code> and <code>digest</code> methods according to the specifics of the hash algorithm.</p><h2 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h2><ul><li>The <code>update</code> methods allows chaining for incremental hashing.</li><li>The <code>digest</code> methods finalize the hash computation and return the result either as a <code>Uint8Array</code> or as an encoded string.</li></ul><h2 id="extended-by" tabindex="-1">Extended by <a class="header-anchor" href="#extended-by" aria-label="Permalink to &quot;Extended by&quot;">​</a></h2><ul><li><a href="./Crc32.html"><code>Crc32</code></a></li><li><a href="./ShaBase.html"><code>ShaBase</code></a></li></ul><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HashBase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): HashBase;</span></span></code></pre></div><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>HashBase</code></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="digest" tabindex="-1">digest() <a class="header-anchor" href="#digest" aria-label="Permalink to &quot;digest()&quot;">​</a></h3><h4 id="call-signature" tabindex="-1">Call Signature <a class="header-anchor" href="#call-signature" aria-label="Permalink to &quot;Call Signature&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">abstract </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">digest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): Uint8Array;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/hash-base.ts#L27" target="_blank" rel="noreferrer">src/hash-base.ts:27</a></p><p>Finalizes the hash computation and returns the resulting hash digest. This method performs any necessary padding and processes the final block of data according to the hash algorithm&#39;s specification.</p><h5 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer"><code>Uint8Array</code></a></p><p>The hash digest</p><h4 id="call-signature-1" tabindex="-1">Call Signature <a class="header-anchor" href="#call-signature-1" aria-label="Permalink to &quot;Call Signature&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">abstract </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">digest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(encoding: BinaryEncoding): string;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/hash-base.ts#L35" target="_blank" rel="noreferrer">src/hash-base.ts:35</a></p><p>Finalizes the hash computation and returns the resulting hash digest. This method performs any necessary padding and processes the final block of data according to the hash algorithm&#39;s specification.</p><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>encoding</code></td><td><a href="./BinaryEncoding.html"><code>BinaryEncoding</code></a></td><td>Optional. The encoding to use for the output digest (e.g., &#39;hex&#39;, &#39;base64&#39;).</td></tr></tbody></table><h5 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>string</code></p><p>An encoded string, depending on the <code>encoding</code> parameter.</p><hr><h3 id="update" tabindex="-1">update() <a class="header-anchor" href="#update" aria-label="Permalink to &quot;update()&quot;">​</a></h3><h4 id="call-signature-2" tabindex="-1">Call Signature <a class="header-anchor" href="#call-signature-2" aria-label="Permalink to &quot;Call Signature&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">abstract </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data: BinaryObject): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/hash-base.ts#L42" target="_blank" rel="noreferrer">src/hash-base.ts:42</a></p><p>Updates the hash with the given binary data.</p><h5 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>data</code></td><td><a href="./BinaryObject.html"><code>BinaryObject</code></a></td><td>The data to update the hash with, as a <code>BinaryObject</code>.</td></tr></tbody></table><h5 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>this</code></p><p>The hash instance for method chaining.</p><h4 id="call-signature-3" tabindex="-1">Call Signature <a class="header-anchor" href="#call-signature-3" aria-label="Permalink to &quot;Call Signature&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">abstract </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data: string, encoding</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TextEncoding): </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/hash-base.ts#L50" target="_blank" rel="noreferrer">src/hash-base.ts:50</a></p><p>Updates the hash with the given string data.</p><h5 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>data</code></td><td><code>string</code></td><td>The string data to update the hash with.</td></tr><tr><td><code>encoding?</code></td><td><a href="./TextEncoding.html"><code>TextEncoding</code></a></td><td>Optional text encoding of the input string (e.g., &#39;utf8&#39;).</td></tr></tbody></table><h5 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>this</code></p><p>The hash instance for method chaining.</p>',52)])])}const u=e(r,[["render",h]]);export{b as __pageData,u as default};
