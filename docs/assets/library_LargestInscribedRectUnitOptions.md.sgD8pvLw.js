import{_ as t,c as a,o as s,ag as i}from"./chunks/framework.8SQNO8WI.js";const g=JSON.parse('{"title":"Type Alias: LargestInscribedRectUnitOptions","description":"","frontmatter":{},"headers":[],"relativePath":"library/LargestInscribedRectUnitOptions.md","filePath":"library/LargestInscribedRectUnitOptions.md"}'),r={name:"library/LargestInscribedRectUnitOptions.md"};function n(l,e,d,o,h,c){return s(),a("div",null,[...e[0]||(e[0]=[i(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_geometry.html">Geometry</a> &gt; <a href="./index_geometry_rectangle.html">Rectangle</a></p><h1 id="type-alias-largestinscribedrectunitoptions" tabindex="-1">Type Alias: LargestInscribedRectUnitOptions <a class="header-anchor" href="#type-alias-largestinscribedrectunitoptions" aria-label="Permalink to &quot;Type Alias: LargestInscribedRectUnitOptions&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LargestInscribedRectUnitOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  aligned</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  squareOnly</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/largest-inscribed-rectangle.ts#L29" target="_blank" rel="noreferrer">largest-inscribed-rectangle.ts:29</a></p><p>Configuration options for the largest inscribed rectangle algorithm.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Default value</th><th>Description</th><th>Defined in</th></tr></thead><tbody><tr><td><a id="aligned"></a> <code>aligned?</code></td><td><code>boolean</code></td><td><code>true</code></td><td>If true, only consider axis-aligned rectangles. If false, considers rectangles at all orientations.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/largest-inscribed-rectangle.ts#L35" target="_blank" rel="noreferrer">src/largest-inscribed-rectangle.ts:35</a></td></tr><tr><td><a id="squareonly"></a> <code>squareOnly?</code></td><td><code>boolean</code></td><td><code>false</code></td><td>If true, only consider squares (rectangles where width equals height). If false, considers rectangles of any aspect ratio.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/largest-inscribed-rectangle.ts#L42" target="_blank" rel="noreferrer">src/largest-inscribed-rectangle.ts:42</a></td></tr></tbody></table>`,7)])])}const b=t(r,[["render",n]]);export{g as __pageData,b as default};
