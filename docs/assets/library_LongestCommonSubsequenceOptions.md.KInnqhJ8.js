import{_ as e,c as i,o as t,ag as a}from"./chunks/framework.8SQNO8WI.js";const c=JSON.parse('{"title":"Type Alias: LongestCommonSubsequenceOptions<T>","description":"","frontmatter":{},"headers":[],"relativePath":"library/LongestCommonSubsequenceOptions.md","filePath":"library/LongestCommonSubsequenceOptions.md"}'),n={name:"library/LongestCommonSubsequenceOptions.md"};function h(o,s,r,l,p,d){return t(),i("div",null,[...s[0]||(s[0]=[a(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_array.html">Array</a> &gt; <a href="./index_array_analysis.html">Analysis</a></p><h1 id="type-alias-longestcommonsubsequenceoptions-t" tabindex="-1">Type Alias: LongestCommonSubsequenceOptions&lt;T&gt; <a class="header-anchor" href="#type-alias-longestcommonsubsequenceoptions-t" aria-label="Permalink to &quot;Type Alias: LongestCommonSubsequenceOptions\\&lt;T\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LongestCommonSubsequenceOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  collect</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">i1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">i2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  compare</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/longest-common-subsequence.ts#L9" target="_blank" rel="noreferrer">longest-common-subsequence.ts:9</a></p><p>Options for configuring the <a href="./longestCommonSubsequence.html">longestCommonSubsequence</a> calculation.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type Parameter</th><th>Description</th></tr></thead><tbody><tr><td><code>T</code></td><td>Type of objects in the arrays.</td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Description</th><th>Defined in</th></tr></thead><tbody><tr><td><a id="collect"></a> <code>collect?</code></td><td>(<code>this</code>: <code>void</code>, <code>i1</code>: <code>number</code>, <code>i2</code>: <code>number</code>) =&gt; <code>T</code></td><td>Function used to decide what to return as a result subsequence. It accepts 2 arguments: index of common element in the first array and index in the second. The default function returns element from the first array.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/longest-common-subsequence.ts#L22" target="_blank" rel="noreferrer">src/longest-common-subsequence.ts:22</a></td></tr><tr><td><a id="compare"></a> <code>compare?</code></td><td>(<code>this</code>: <code>void</code>, <code>a</code>: <code>T</code>, <code>b</code>: <code>T</code>) =&gt; <code>boolean</code></td><td>Function that acts as a custom comparator for the array objects. Function should return true if objects are equal, otherwise false.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/longest-common-subsequence.ts#L14" target="_blank" rel="noreferrer">src/longest-common-subsequence.ts:14</a></td></tr></tbody></table>`,9)])])}const g=e(n,[["render",h]]);export{c as __pageData,g as default};
