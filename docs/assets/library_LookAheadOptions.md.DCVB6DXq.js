import{_ as s,c as t,o as i,ag as e}from"./chunks/framework.8SQNO8WI.js";const c=JSON.parse('{"title":"Type Alias: LookAheadOptions<T>","description":"","frontmatter":{},"headers":[],"relativePath":"library/LookAheadOptions.md","filePath":"library/LookAheadOptions.md"}'),n={name:"library/LookAheadOptions.md"};function h(l,a,p,r,d,o){return i(),t("div",null,[...a[0]||(a[0]=[e(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_array.html">Array</a> &gt; <a href="./index_array_iteration.html">Iteration</a></p><h1 id="type-alias-lookaheadoptions-t" tabindex="-1">Type Alias: LookAheadOptions&lt;T&gt; <a class="header-anchor" href="#type-alias-lookaheadoptions-t" aria-label="Permalink to &quot;Type Alias: LookAheadOptions\\&lt;T\\&gt;&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LookAheadOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  last</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  wrapAround</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/look-ahead.ts#L7" target="_blank" rel="noreferrer">look-ahead.ts:7</a></p><p>Options for <a href="./lookAhead.html">lookAhead</a> operations.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type Parameter</th><th>Description</th></tr></thead><tbody><tr><td><code>T</code></td><td>The type of the items in the sequence.</td></tr></tbody></table><h2 id="type-declaration" tabindex="-1">Type Declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type Declaration&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th><th>Defined in</th></tr></thead><tbody><tr><td><code>last</code></td><td><code>T</code></td><td>Specifies the last item in the sequence.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/look-ahead.ts#L12" target="_blank" rel="noreferrer">src/look-ahead.ts:12</a></td></tr></tbody></table><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  wrapAround</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: boolean;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th><th>Defined in</th></tr></thead><tbody><tr><td><code>wrapAround</code></td><td><code>boolean</code></td><td>Determines whether the look-ahead should wrap around to the beginning when reaching the end.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/look-ahead.ts#L18" target="_blank" rel="noreferrer">src/look-ahead.ts:18</a></td></tr></tbody></table>`,12)])])}const y=s(n,[["render",h]]);export{c as __pageData,y as default};
