import{_ as i,c as s,o as a,ag as e}from"./chunks/framework.8SQNO8WI.js";const k=JSON.parse('{"title":"Type Alias: MetricUnitsOptions","description":"","frontmatter":{},"headers":[],"relativePath":"library/MetricUnitsOptions.md","filePath":"library/MetricUnitsOptions.md"}'),r={name:"library/MetricUnitsOptions.md"};function n(h,t,d,l,p,o){return a(),s("div",null,[...t[0]||(t[0]=[e(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_math.html">Math</a> &gt; <a href="./index_math_verbalization.html">Verbalization</a></p><h1 id="type-alias-metricunitsoptions" tabindex="-1">Type Alias: MetricUnitsOptions <a class="header-anchor" href="#type-alias-metricunitsoptions" aria-label="Permalink to &quot;Type Alias: MetricUnitsOptions&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MetricUnitsOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  macro</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ArrayLike</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  micro</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ArrayLike</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  pad</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  precision</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  unit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/metric-units.ts#L52" target="_blank" rel="noreferrer">metric-units.ts:52</a></p><p>Options for the <a href="./metricUnits.html">metricUnits</a> function w</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Description</th><th>Defined in</th></tr></thead><tbody><tr><td><a id="format"></a> <code>format?</code></td><td><code>string</code></td><td>format specification to pass to <a href="./formatNumber.html">formatNumber</a></td><td><a href="https://github.com/technobuddha/library/blob/main/src/metric-units.ts#L56" target="_blank" rel="noreferrer">src/metric-units.ts:56</a></td></tr><tr><td><a id="macro"></a> <code>macro?</code></td><td><code>ArrayLike</code>&lt;<code>string</code>&gt;</td><td>Array of suffixes to use for large values (default: [&#39;K&#39;, &#39;M&#39;, &#39;B&#39;, &#39;T&#39;, &#39;P&#39;, &#39;E&#39;, &#39;Z&#39;, &#39;Y&#39;])</td><td><a href="https://github.com/technobuddha/library/blob/main/src/metric-units.ts#L64" target="_blank" rel="noreferrer">src/metric-units.ts:64</a></td></tr><tr><td><a id="micro"></a> <code>micro?</code></td><td><code>ArrayLike</code>&lt;<code>string</code>&gt;</td><td>Array of suffixed to use for small values (default: [&#39;m&#39;, &#39;µ&#39;, &#39;n&#39;, &#39;p&#39;, &#39;f&#39;, &#39;a&#39;, &#39;z&#39;, &#39;y&#39;])</td><td><a href="https://github.com/technobuddha/library/blob/main/src/metric-units.ts#L68" target="_blank" rel="noreferrer">src/metric-units.ts:68</a></td></tr><tr><td><a id="pad"></a> <code>pad?</code></td><td><code>number</code></td><td>left padding to apply to numeric value</td><td><a href="https://github.com/technobuddha/library/blob/main/src/metric-units.ts#L60" target="_blank" rel="noreferrer">src/metric-units.ts:60</a></td></tr><tr><td><a id="precision"></a> <code>precision?</code></td><td><code>number</code></td><td>Number of digits after the decimal point to display</td><td><a href="https://github.com/technobuddha/library/blob/main/src/metric-units.ts#L76" target="_blank" rel="noreferrer">src/metric-units.ts:76</a></td></tr><tr><td><a id="unit"></a> <code>unit?</code></td><td><code>number</code></td><td>Multiplier for each level of suffixes (default: 1000)</td><td><a href="https://github.com/technobuddha/library/blob/main/src/metric-units.ts#L72" target="_blank" rel="noreferrer">src/metric-units.ts:72</a></td></tr></tbody></table>`,7)])])}const m=i(r,[["render",n]]);export{k as __pageData,m as default};
