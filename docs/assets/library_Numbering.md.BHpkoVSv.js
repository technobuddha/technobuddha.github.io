import{_ as t,c as s,o as a,ag as e}from"./chunks/framework.8SQNO8WI.js";const c=JSON.parse('{"title":"Type Alias: Numbering","description":"","frontmatter":{},"headers":[],"relativePath":"library/Numbering.md","filePath":"library/Numbering.md"}'),n={name:"library/Numbering.md"};function r(h,i,d,o,l,p){return a(),s("div",null,[...i[0]||(i[0]=[e(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_math.html">Math</a> &gt; <a href="./index_math_verbalization.html">Verbalization</a></p><h1 id="type-alias-numbering" tabindex="-1">Type Alias: Numbering <a class="header-anchor" href="#type-alias-numbering" aria-label="Permalink to &quot;Type Alias: Numbering&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Numbering</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  and</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  denominators</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;common&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;wrench&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[];</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  hyphen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  ordinal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  output</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">     fraction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;numeric&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;alphabetic&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">     integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;numeric&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;alphabetic&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hybrid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  };</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  precision</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  shift</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;decimal&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;fraction&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  tolerance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/numbering/numbering.ts#L15" target="_blank" rel="noreferrer">numbering/numbering.ts:15</a></p><p>Options for controlling how numbers are converted to words or symbols.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Description</th><th>Defined in</th></tr></thead><tbody><tr><td><a id="and"></a> <code>and</code></td><td><code>string</code></td><td>Word to place after the hundreds. E.g., &quot;one hundred and one&quot; vs. &quot;one hundred one&quot;</td><td><a href="https://github.com/technobuddha/library/blob/main/src/numbering/numbering.ts#L30" target="_blank" rel="noreferrer">src/numbering/numbering.ts:30</a></td></tr><tr><td><a id="denominators"></a> <code>denominators</code></td><td><code>&quot;common&quot;</code> | <code>&quot;wrench&quot;</code> | <code>number</code>[]</td><td>Allowed denominators for fractions. - &#39;common&#39;: typical denominators (2, 3, 4, etc.) - &#39;wrench&#39;: denominators used in wrench sizes - number[]: custom denominators</td><td><a href="https://github.com/technobuddha/library/blob/main/src/numbering/numbering.ts#L44" target="_blank" rel="noreferrer">src/numbering/numbering.ts:44</a></td></tr><tr><td><a id="hyphen"></a> <code>hyphen</code></td><td><code>string</code></td><td>Character to place between the tens and ones units. E.g., &quot;twenty-one&quot; vs. &quot;twenty one&quot;</td><td><a href="https://github.com/technobuddha/library/blob/main/src/numbering/numbering.ts#L33" target="_blank" rel="noreferrer">src/numbering/numbering.ts:33</a></td></tr><tr><td><a id="ordinal"></a> <code>ordinal</code></td><td><code>boolean</code></td><td>Whether to use ordinal form (e.g., &quot;first&quot;, &quot;second&quot;, &quot;third&quot;).</td><td><a href="https://github.com/technobuddha/library/blob/main/src/numbering/numbering.ts#L50" target="_blank" rel="noreferrer">src/numbering/numbering.ts:50</a></td></tr><tr><td><a id="output"></a> <code>output</code></td><td>{ <code>fraction</code>: <code>&quot;numeric&quot;</code> | <code>&quot;alphabetic&quot;</code>; <code>integer</code>: <code>&quot;numeric&quot;</code> | <code>&quot;alphabetic&quot;</code> | <code>&quot;hybrid&quot;</code>; }</td><td>Output format for integer and fraction parts. - integer: &#39;numeric&#39;</td><td>&#39;alphabetic&#39;</td></tr><tr><td><code>output.fraction</code></td><td><code>&quot;numeric&quot;</code> | <code>&quot;alphabetic&quot;</code></td><td>fraction output format: &#39;numeric&#39; or &#39;alphabetic&#39;</td><td><a href="https://github.com/technobuddha/library/blob/main/src/numbering/numbering.ts#L26" target="_blank" rel="noreferrer">src/numbering/numbering.ts:26</a></td></tr><tr><td><code>output.integer</code></td><td><code>&quot;numeric&quot;</code> | <code>&quot;alphabetic&quot;</code> | <code>&quot;hybrid&quot;</code></td><td>integer output format: &#39;numeric&#39;, &#39;alphabetic&#39;, or &#39;hybrid&#39;</td><td><a href="https://github.com/technobuddha/library/blob/main/src/numbering/numbering.ts#L23" target="_blank" rel="noreferrer">src/numbering/numbering.ts:23</a></td></tr><tr><td><a id="precision"></a> <code>precision</code></td><td><code>1</code> | <code>2</code> | <code>3</code> | <code>4</code> | <code>5</code> | <code>6</code> | <code>7</code> | <code>8</code> | <code>9</code></td><td>Number of decimal places or significant digits to use (1-9).</td><td><a href="https://github.com/technobuddha/library/blob/main/src/numbering/numbering.ts#L47" target="_blank" rel="noreferrer">src/numbering/numbering.ts:47</a></td></tr><tr><td><a id="shift"></a> <code>shift</code></td><td><code>false</code> | <code>&quot;decimal&quot;</code> | <code>&quot;fraction&quot;</code></td><td>Whether to shift the output. - false: no shift - &#39;decimal&#39;: shift decimal part - &#39;fraction&#39;: shift fraction part</td><td><a href="https://github.com/technobuddha/library/blob/main/src/numbering/numbering.ts#L58" target="_blank" rel="noreferrer">src/numbering/numbering.ts:58</a></td></tr><tr><td><a id="tolerance"></a> <code>tolerance</code></td><td><code>number</code></td><td>Maximum allowed difference between the actual and represented value.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/numbering/numbering.ts#L36" target="_blank" rel="noreferrer">src/numbering/numbering.ts:36</a></td></tr></tbody></table>`,7)])])}const u=t(n,[["render",r]]);export{c as __pageData,u as default};
