import{_ as t,c as i,o as a,ag as s}from"./chunks/framework.8SQNO8WI.js";const k=JSON.parse('{"title":"Type Alias: OnLineOptions","description":"","frontmatter":{},"headers":[],"relativePath":"library/OnLineOptions.md","filePath":"library/OnLineOptions.md"}'),n={name:"library/OnLineOptions.md"};function r(l,e,o,h,d,p){return a(),i("div",null,[...e[0]||(e[0]=[s(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_geometry.html">Geometry</a> &gt; <a href="./index_geometry_lineSegment.html">Line Segment</a></p><h1 id="type-alias-onlineoptions" tabindex="-1">Type Alias: OnLineOptions <a class="header-anchor" href="#type-alias-onlineoptions" aria-label="Permalink to &quot;Type Alias: OnLineOptions&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnLineOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  extend</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  tolerance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/is-on-line.ts#L10" target="_blank" rel="noreferrer">is-on-line.ts:10</a></p><p>Options for the <a href="./isOnLine.html">isOnLine</a> function</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Default value</th><th>Description</th><th>Defined in</th></tr></thead><tbody><tr><td><a id="extend"></a> <code>extend?</code></td><td><code>boolean</code></td><td><code>false</code></td><td>If true, treats the segments as infinite lines; if false, only considers the actual segments.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/is-on-line.ts#L20" target="_blank" rel="noreferrer">src/is-on-line.ts:20</a></td></tr><tr><td><a id="tolerance"></a> <code>tolerance?</code></td><td><code>number</code></td><td><code>1e-10</code></td><td>Optional tolerance for floating-point comparison.</td><td><a href="https://github.com/technobuddha/library/blob/main/src/is-on-line.ts#L15" target="_blank" rel="noreferrer">src/is-on-line.ts:15</a></td></tr></tbody></table>`,7)])])}const b=t(n,[["render",r]]);export{k as __pageData,b as default};
