import{_ as s,c as i,o as e,ag as a}from"./chunks/framework.8SQNO8WI.js";const c=JSON.parse('{"title":"Type Alias: QuoteOptions","description":"","frontmatter":{},"headers":[],"relativePath":"library/QuoteOptions.md","filePath":"library/QuoteOptions.md"}'),n={name:"library/QuoteOptions.md"};function r(h,t,o,p,l,d){return e(),i("div",null,[...t[0]||(t[0]=[a(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_string.html">String</a> &gt; <a href="./index_string_construction.html">Construction</a></p><h1 id="type-alias-quoteoptions" tabindex="-1">Type Alias: QuoteOptions <a class="header-anchor" href="#type-alias-quoteoptions" aria-label="Permalink to &quot;Type Alias: QuoteOptions&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> QuoteOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  escape</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">input</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  quote</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/quote.ts#L10" target="_blank" rel="noreferrer">quote.ts:10</a></p><p>Options for the <a href="./quote.html">quote</a> and <a href="./unquote.html">unquote</a> function</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Property</th><th>Type</th><th>Description</th><th>Defined in</th></tr></thead><tbody><tr><td><a id="escape"></a> <code>escape?</code></td><td><code>string</code> | (<code>input</code>: <code>string</code>) =&gt; <code>string</code></td><td>Character sequence to replace the quote mark within the text, or function to return the properly escaped text</td><td><a href="https://github.com/technobuddha/library/blob/main/src/quote.ts#L14" target="_blank" rel="noreferrer">src/quote.ts:14</a></td></tr><tr><td><a id="quote"></a> <code>quote?</code></td><td><code>string</code></td><td>The quote character(s) to use</td><td><a href="https://github.com/technobuddha/library/blob/main/src/quote.ts#L12" target="_blank" rel="noreferrer">src/quote.ts:12</a></td></tr></tbody></table>`,7)])])}const u=s(n,[["render",r]]);export{c as __pageData,u as default};
