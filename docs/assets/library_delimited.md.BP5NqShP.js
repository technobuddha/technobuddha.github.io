import{_ as i,c as e,o as s,ag as a}from"./chunks/framework.8SQNO8WI.js";const k=JSON.parse('{"title":"Function: delimited()","description":"","frontmatter":{},"headers":[],"relativePath":"library/delimited.md","filePath":"library/delimited.md"}'),d={name:"library/delimited.md"};function n(r,t,l,h,o,p){return s(),e("div",null,[...t[0]||(t[0]=[a(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_string.html">String</a> &gt; <a href="./index_string_deconstruction.html">Deconstruction</a></p><h1 id="function-delimited" tabindex="-1">Function: delimited() <a class="header-anchor" href="#function-delimited" aria-label="Permalink to &quot;Function: delimited()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> delimited</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">   input</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">   delimiter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">   index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">   count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/delimited.ts#L12" target="_blank" rel="noreferrer">delimited.ts:12</a></p><p>Return a field from a delimited string</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Default value</th><th>Description</th></tr></thead><tbody><tr><td><code>input</code></td><td><code>string</code></td><td><code>undefined</code></td><td>The delimited string</td></tr><tr><td><code>delimiter</code></td><td><code>string</code></td><td><code>undefined</code></td><td>The delimiter string</td></tr><tr><td><code>index</code></td><td><code>number</code></td><td><code>0</code></td><td>The position of the desired field, 0 is the first field, negative numbers count backwards from the end (default 0)</td></tr><tr><td><code>count</code></td><td><code>number</code></td><td><code>1</code></td><td>The number of fields to return (default 1)</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p>`,9)])])}const u=i(d,[["render",n]]);export{k as __pageData,u as default};
