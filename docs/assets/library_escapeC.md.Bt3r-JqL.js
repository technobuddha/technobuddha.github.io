import{_ as a,c as s,o as i,ag as e}from"./chunks/framework.8SQNO8WI.js";const c=JSON.parse('{"title":"Function: escapeC()","description":"","frontmatter":{},"headers":[],"relativePath":"library/escapeC.md","filePath":"library/escapeC.md"}'),n={name:"library/escapeC.md"};function d(r,t,h,l,p,k){return i(),s("div",null,[...t[0]||(t[0]=[e(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_programming.html">Programming</a> &gt; <a href="./index_programming_escaping.html">Escaping</a></p><h1 id="function-escapec" tabindex="-1">Function: escapeC() <a class="header-anchor" href="#function-escapec" aria-label="Permalink to &quot;Function: escapeC()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> escapeC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">input</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/escape-c.ts#L46" target="_blank" rel="noreferrer">escape-c.ts:46</a></p><p>Escape a string for use in C/C++</p><table tabindex="0"><thead><tr><th>Character</th><th>Hex</th><th>Escape Sequence</th></tr></thead><tbody><tr><td>NUL</td><td>0x00</td><td>\\0 or \\000[^1]</td></tr><tr><td>Bell</td><td>0x07</td><td>\\a</td></tr><tr><td>Backspace</td><td>0x08</td><td>\\b</td></tr><tr><td>Tab</td><td>0x09</td><td>\\t</td></tr><tr><td>Newline</td><td>0x0a</td><td>\\n</td></tr><tr><td>Vertical Tab</td><td>0x0b</td><td>\\v</td></tr><tr><td>Form Feed</td><td>0x0c</td><td>\\f</td></tr><tr><td>Carriage Return</td><td>0x0d</td><td>\\r</td></tr><tr><td>Escape</td><td>0x1b</td><td>\\x1b[^2] or \\u001b[^3]</td></tr><tr><td>Double Quote</td><td>0x22</td><td>\\&quot;</td></tr><tr><td>Single Quote</td><td>0x27</td><td>\\&#39;</td></tr><tr><td>Question Mark</td><td>0x3f</td><td>\\?</td></tr><tr><td>Backslash</td><td>0x5c</td><td>\\\\</td></tr><tr><td>Control Characters</td><td>0x00-0x1f, 0x7f-0x9f</td><td>\\xnn or \\unnnn[^3]</td></tr><tr><td>BMP</td><td>0x0100-0xffff</td><td>\\unnnn</td></tr><tr><td>Astral</td><td>0x10000-0x10ffff</td><td>\\Unnnnnnnn</td></tr></tbody></table><p>[^1]: The sequence \\0 must not be followed by a octal digit (0-7) to avoid being interpreted as a different character, \\000 will be used to avoid ambiguity. [^2]: The non-standard sequence \\e represents the escape character in GCC, clang and tcc. It was not added to the C standard because it has no meaningful equivalent in some character sets (such as EBCDIC). [^3]: The sequence \\xnn must not be followed by a hexadecimal digit (0-9, a-f, A-F) to avoid being interpreted as a different character, \\unnnn will be used to avoid ambiguity.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>input</code></td><td><code>string</code></td><td>The string to escape</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p><p>the escaped string</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">escapeC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">World&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;Hello\\\\nWorld&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">escapeC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;\\\\\\&quot;\\\\\\\\&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">escapeC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\x07</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;\\\\a&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">escapeC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\u20ac</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;\\\\u20ac&quot;</span></span></code></pre></div>`,14)])])}const g=a(n,[["render",d]]);export{c as __pageData,g as default};
