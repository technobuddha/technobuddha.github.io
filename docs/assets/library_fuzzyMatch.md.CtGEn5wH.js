import{_ as a,c as i,o as s,ag as e}from"./chunks/framework.8SQNO8WI.js";const k=JSON.parse('{"title":"Function: fuzzyMatch()","description":"","frontmatter":{},"headers":[],"relativePath":"library/fuzzyMatch.md","filePath":"library/fuzzyMatch.md"}'),n={name:"library/fuzzyMatch.md"};function r(h,t,d,o,p,l){return s(),i("div",null,[...t[0]||(t[0]=[e(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_string.html">String</a> &gt; <a href="./index_string_fuzzyMatch.html">Fuzzy Match</a></p><h1 id="function-fuzzymatch" tabindex="-1">Function: fuzzyMatch() <a class="header-anchor" href="#function-fuzzymatch" aria-label="Permalink to &quot;Function: fuzzyMatch()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fuzzyMatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">   input</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">   comparedTo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">   options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FuzzyMatchOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/fuzzy-match.ts#L31" target="_blank" rel="noreferrer">fuzzy-match.ts:31</a></p><p>Computes a fuzzy similarity score between two strings using a weighted combination of Levenshtein distance, Dice coefficient, and longest common substring metrics.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>input</code></td><td><code>string</code></td><td>The input string to compare.</td></tr><tr><td><code>comparedTo</code></td><td><code>string</code></td><td>The string to compare against.</td></tr><tr><td><code>options</code></td><td><a href="./FuzzyMatchOptions.html"><code>FuzzyMatchOptions</code></a></td><td>Optional configuration for the comparison.</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>number</code></p><p>A similarity score between 0 and 1, where 1 indicates a perfect match.</p>`,10)])])}const u=a(n,[["render",r]]);export{k as __pageData,u as default};
