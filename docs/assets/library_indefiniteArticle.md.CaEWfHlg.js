import{_ as t,c as e,o as a,ag as n}from"./chunks/framework.8SQNO8WI.js";const k=JSON.parse('{"title":"Function: indefiniteArticle()","description":"","frontmatter":{},"headers":[],"relativePath":"library/indefiniteArticle.md","filePath":"library/indefiniteArticle.md"}'),s={name:"library/indefiniteArticle.md"};function r(h,i,d,l,o,p){return a(),e("div",null,[...i[0]||(i[0]=[n('<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_string.html">String</a> &gt; <a href="./index_string_partsOfSpeech.html">Parts of Speech</a></p><h1 id="function-indefinitearticle" tabindex="-1">Function: indefiniteArticle() <a class="header-anchor" href="#function-indefinitearticle" aria-label="Permalink to &quot;Function: indefiniteArticle()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> indefiniteArticle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">word</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IndefiniteArticleOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/indefinite-article.ts#L47" target="_blank" rel="noreferrer">indefinite-article.ts:47</a></p><p>Determine the appropriate indefinite article to use with a word.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>word</code></td><td><code>string</code></td><td>The word</td></tr><tr><td><code>options</code></td><td><a href="./IndefiniteArticleOptions.html"><code>IndefiniteArticleOptions</code></a></td><td>see <a href="./IndefiniteArticleOptions.html">IndefiniteArticleOptions</a></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p><p>The appropriate indefinite article (&quot;a&quot; or &quot;an&quot;) combined with the input word. If the only option is used, only the indefinite article is returned.</p><h2 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h2><p>The answer is derived from a simple rules engine, it attempts to cover most exceptions to the rules, but the English language has lots of quirks, and this rules engine can not cover them all</p>',12)])])}const f=t(s,[["render",r]]);export{k as __pageData,f as default};
