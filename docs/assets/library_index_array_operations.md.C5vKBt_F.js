import{_ as e,c as a,o as r,ag as o}from"./chunks/framework.8SQNO8WI.js";const _=JSON.parse('{"title":"Operations","description":"","frontmatter":{},"headers":[],"relativePath":"library/index_array_operations.md","filePath":"library/index_array_operations.md"}'),d={name:"library/index_array_operations.md"};function n(i,t,l,s,p,c){return r(),a("div",null,[...t[0]||(t[0]=[o('<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_array.html">Array</a></p><h1 id="operations" tabindex="-1">Operations <a class="header-anchor" href="#operations" aria-label="Permalink to &quot;Operations&quot;">â€‹</a></h1><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a href="./collapse.html">collapse</a></td><td>Function</td><td>Collapses an array of values into a flat array with <code>null</code> and <code>undefined</code> elements removed.</td></tr><tr><td><a href="./Collapsible.html">Collapsible</a></td><td>Type</td><td>Represents a value that can be &quot;collapsed&quot; into a flat sequence of values of type <code>T</code>.</td></tr><tr><td><a href="./CollapsiblePrimitive.html">CollapsiblePrimitive</a></td><td>Type</td><td>Represents a primitive type that excludes <code>null</code> and <code>undefined</code>.</td></tr><tr><td><a href="./CollapsibleValue.html">CollapsibleValue</a></td><td>Type</td><td>A <code>CollapsibleValue&lt;T&gt;</code></td></tr><tr><td><a href="./conjoin.html">conjoin</a></td><td>Function</td><td>Create a list from an array, separating values and inserting a conjunction</td></tr><tr><td><a href="./ConjoinOptions.html">ConjoinOptions</a></td><td>Type</td><td>Options for creating a coordinated list with <a href="./conjoin.html">conjoin</a></td></tr><tr><td><a href="./zipperMerge.html">zipperMerge</a></td><td>Function</td><td>Merges multiple arrays into a single array by interleaving their elements at each index.</td></tr></tbody></table>',3)])])}const f=e(d,[["render",n]]);export{_ as __pageData,f as default};
