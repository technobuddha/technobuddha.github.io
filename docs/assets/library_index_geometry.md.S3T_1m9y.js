import{_ as e,c as t,o as n,ag as i}from"./chunks/framework.8SQNO8WI.js";const f=JSON.parse('{"title":"Geometry","description":"","frontmatter":{},"headers":[],"relativePath":"library/index_geometry.md","filePath":"library/index_geometry.md"}'),r={name:"library/index_geometry.md"};function d(l,a,o,h,m,s){return n(),t("div",null,[...a[0]||(a[0]=[i('<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a></p><h1 id="geometry" tabindex="-1">Geometry <a class="header-anchor" href="#geometry" aria-label="Permalink to &quot;Geometry&quot;">​</a></h1><h2 id="angle" tabindex="-1"><a href="./index_geometry_angle.html">Angle</a> <a class="header-anchor" href="#angle" aria-label="Permalink to &quot;[Angle](index_geometry_angle.md)&quot;">​</a></h2><div class="tb-group"><a data-kind="F" href="./angleBetweenPoints.html">angleBetweenPoints</a><a data-kind="F" href="./angleDifference.html">angleDifference</a><a data-kind="F" href="./angleOfLine.html">angleOfLine</a><a data-kind="F" href="./angleReflection.html">angleReflection</a><a data-kind="T" href="./AngleUnit.html">AngleUnit</a><a data-kind="C" href="./angleUnits.html">angleUnits</a><a data-kind="F" href="./normalizeAngle.html">normalizeAngle</a><a data-kind="T" href="./OriginOptions.html">OriginOptions</a><a data-kind="F" href="./toAngle.html">toAngle</a><a data-kind="F" href="./toDegrees.html">toDegrees</a><a data-kind="F" href="./toRadians.html">toRadians</a><a data-kind="T" href="./UnitOptions.html">UnitOptions</a></div><h2 id="coordinates" tabindex="-1"><a href="./index_geometry_coordinates.html">Coordinates</a> <a class="header-anchor" href="#coordinates" aria-label="Permalink to &quot;[Coordinates](index_geometry_coordinates.md)&quot;">​</a></h2><div class="tb-group"><a data-kind="T" href="./Cartesian.html">Cartesian</a><a data-kind="F" href="./isCartesian.html">isCartesian</a><a data-kind="F" href="./isPolar.html">isPolar</a><a data-kind="C" href="./Origin.html">Origin</a><a data-kind="T" href="./Polar.html">Polar</a><a data-kind="F" href="./toCartesian.html">toCartesian</a><a data-kind="F" href="./toPolar.html">toPolar</a><a data-kind="T" href="./XY.html">XY</a></div><h2 id="line-segment" tabindex="-1"><a href="./index_geometry_lineSegment.html">Line Segment</a> <a class="header-anchor" href="#line-segment" aria-label="Permalink to &quot;[Line Segment](index_geometry_lineSegment.md)&quot;">​</a></h2><div class="tb-group"><a data-kind="F" href="./lineIntersection.html">lineIntersection</a><a data-kind="F" href="./lineLength.html">lineLength</a><a data-kind="T" href="./LineSegment.html">LineSegment</a><a data-kind="F" href="./midpoint.html">midpoint</a><a data-kind="F" href="./normalizeLineSegment.html">normalizeLineSegment</a><a data-kind="T" href="./OnLineOptions.html">OnLineOptions</a><a data-kind="F" href="./polygonSides.html">polygonSides</a><a data-kind="F" href="./toLineSegment.html">toLineSegment</a></div><h2 id="point" tabindex="-1"><a href="./index_geometry_point.html">Point</a> <a class="header-anchor" href="#point" aria-label="Permalink to &quot;[Point](index_geometry_point.md)&quot;">​</a></h2><div class="tb-group"><a data-kind="F" href="./isLeftOfLine.html">isLeftOfLine</a><a data-kind="F" href="./isOnLine.html">isOnLine</a><a data-kind="F" href="./isRightOfLine.html">isRightOfLine</a><a data-kind="F" href="./manhattanDistance.html">manhattanDistance</a></div><h2 id="polygon" tabindex="-1"><a href="./index_geometry_polygon.html">Polygon</a> <a class="header-anchor" href="#polygon" aria-label="Permalink to &quot;[Polygon](index_geometry_polygon.md)&quot;">​</a></h2><div class="tb-group"><a data-kind="F" href="./area.html">area</a><a data-kind="F" href="./bounds.html">bounds</a><a data-kind="F" href="./centroid.html">centroid</a><a data-kind="F" href="./convexHull.html">convexHull</a><a data-kind="F" href="./edgeAngles.html">edgeAngles</a><a data-kind="F" href="./isClosed.html">isClosed</a><a data-kind="F" href="./isIntersecting.html">isIntersecting</a><a data-kind="F" href="./isOnPolygon.html">isOnPolygon</a><a data-kind="F" href="./isPolygon.html">isPolygon</a><a data-kind="F" href="./perimeter.html">perimeter</a><a data-kind="T" href="./Polygon.html">Polygon</a><a data-kind="F" href="./regularPolygon.html">regularPolygon</a><a data-kind="F" href="./rotate.html">rotate</a><a data-kind="F" href="./scale.html">scale</a><a data-kind="F" href="./star.html">star</a><a data-kind="F" href="./toClosed.html">toClosed</a><a data-kind="F" href="./toPolygon.html">toPolygon</a><a data-kind="F" href="./translate.html">translate</a></div><h2 id="rectangle" tabindex="-1"><a href="./index_geometry_rectangle.html">Rectangle</a> <a class="header-anchor" href="#rectangle" aria-label="Permalink to &quot;[Rectangle](index_geometry_rectangle.md)&quot;">​</a></h2><div class="tb-group"><a data-kind="F" href="./isInPolygon.html">isInPolygon</a><a data-kind="F" href="./isRect.html">isRect</a><a data-kind="F" href="./largestInscribedRectangle.html">largestInscribedRectangle</a><a data-kind="T" href="./LargestInscribedRectUnitOptions.html">LargestInscribedRectUnitOptions</a><a data-kind="T" href="./Rect.html">Rect</a><a data-kind="T" href="./RotatedRect.html">RotatedRect</a><a data-kind="F" href="./toSquare.html">toSquare</a></div>',14)])])}const c=e(r,[["render",d]]);export{f as __pageData,c as default};
