import{_ as e,c as n,o as a,ag as r}from"./chunks/framework.8SQNO8WI.js";const c=JSON.parse('{"title":"Angle","description":"","frontmatter":{},"headers":[],"relativePath":"library/index_geometry_angle.md","filePath":"library/index_geometry_angle.md"}'),d={name:"library/index_geometry_angle.md"};function i(o,t,l,s,g,h){return a(),n("div",null,[...t[0]||(t[0]=[r('<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_geometry.html">Geometry</a></p><h1 id="angle" tabindex="-1">Angle <a class="header-anchor" href="#angle" aria-label="Permalink to &quot;Angle&quot;">​</a></h1><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a href="./angleBetweenPoints.html">angleBetweenPoints</a></td><td>Function</td><td>Computes the angle between two points (x1,y1) and (x2,y2). Angle zero points in the +X direction, π/2 radians points in the +Y direction (down) and from there we grow clockwise towards π*2 radians.</td></tr><tr><td><a href="./angleDifference.html">angleDifference</a></td><td>Function</td><td>Computes the difference between startAngle and endAngle.</td></tr><tr><td><a href="./angleOfLine.html">angleOfLine</a></td><td>Function</td><td>Calculates the angle of a given line segment, relative to the horizontal axis</td></tr><tr><td><a href="./angleReflection.html">angleReflection</a></td><td>Function</td><td>Calculates the reflection of an angle across a specified axis.</td></tr><tr><td><a href="./AngleUnit.html">AngleUnit</a></td><td>Type</td><td>Types of angle units</td></tr><tr><td><a href="./angleUnits.html">angleUnits</a></td><td>Constant</td><td>Number of units in a circle</td></tr><tr><td><a href="./normalizeAngle.html">normalizeAngle</a></td><td>Function</td><td>Normalizes an angle to be in range 0-1 turns.</td></tr><tr><td><a href="./OriginOptions.html">OriginOptions</a></td><td>Type</td><td>Options for origin-related functions</td></tr><tr><td><a href="./toAngle.html">toAngle</a></td><td>Function</td><td>Converts an angle from one unit to another.</td></tr><tr><td><a href="./toDegrees.html">toDegrees</a></td><td>Function</td><td>Convert an angle from radians to degrees</td></tr><tr><td><a href="./toRadians.html">toRadians</a></td><td>Function</td><td>Converts degrees to radians.</td></tr><tr><td><a href="./UnitOptions.html">UnitOptions</a></td><td>Type</td><td>Options for angle-related functions</td></tr></tbody></table>',3)])])}const m=e(d,[["render",i]]);export{c as __pageData,m as default};
