import{_ as e,c as a,o as r,ag as d}from"./chunks/framework.8SQNO8WI.js";const _=JSON.parse('{"title":"Coordinates","description":"","frontmatter":{},"headers":[],"relativePath":"library/index_geometry_coordinates.md","filePath":"library/index_geometry_coordinates.md"}'),o={name:"library/index_geometry_coordinates.md"};function i(n,t,s,l,c,h){return r(),a("div",null,[...t[0]||(t[0]=[d('<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_geometry.html">Geometry</a></p><h1 id="coordinates" tabindex="-1">Coordinates <a class="header-anchor" href="#coordinates" aria-label="Permalink to &quot;Coordinates&quot;">â€‹</a></h1><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a href="./Cartesian.html">Cartesian</a></td><td>Type</td><td>Represents a point in 2D Cartesian coordinate space.</td></tr><tr><td><a href="./isCartesian.html">isCartesian</a></td><td>Function</td><td>Determines if the provided value is a Cartesian point.</td></tr><tr><td><a href="./isPolar.html">isPolar</a></td><td>Function</td><td>Determines if the provided value is a Polar point.</td></tr><tr><td><a href="./Origin.html">Origin</a></td><td>Constant</td><td>The origin of cartesian coordinates (0, 0)</td></tr><tr><td><a href="./Polar.html">Polar</a></td><td>Type</td><td>Polar coordinate (angle, radius)</td></tr><tr><td><a href="./toCartesian.html">toCartesian</a></td><td>Function</td><td>Convert polar coordinates to cartesian</td></tr><tr><td><a href="./toPolar.html">toPolar</a></td><td>Function</td><td>Convert cartesian coordinates to polar</td></tr><tr><td><a href="./XY.html">XY</a></td><td>Type</td><td>Represents a two-dimensional amount <code>x</code> and <code>y</code> aspects.</td></tr></tbody></table>',3)])])}const p=e(o,[["render",i]]);export{_ as __pageData,p as default};
