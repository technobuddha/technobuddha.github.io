import{_ as r,c as a,o as n,ag as i}from"./chunks/framework.8SQNO8WI.js";const c=JSON.parse('{"title":"Verbalization","description":"","frontmatter":{},"headers":[],"relativePath":"library/index_math_verbalization.md","filePath":"library/index_math_verbalization.md"}'),e={name:"library/index_math_verbalization.md"};function d(o,t,m,s,h,l){return n(),a("div",null,[...t[0]||(t[0]=[i('<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_math.html">Math</a></p><h1 id="verbalization" tabindex="-1">Verbalization <a class="header-anchor" href="#verbalization" aria-label="Permalink to &quot;Verbalization&quot;">â€‹</a></h1><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a href="./binaryUnits.html">binaryUnits</a></td><td>Function</td><td>Abbreviate a binary number by adding a suffix for metric units (i.e. 1024 =&gt; 1KiB)</td></tr><tr><td><a href="./BinaryUnitsOptions.html">BinaryUnitsOptions</a></td><td>Type</td><td>Options for the <a href="./binaryUnits.html">binaryUnits</a> function</td></tr><tr><td><a href="./cardinal.html">cardinal</a></td><td>Function</td><td>Convert a number into text (the cardinal number)</td></tr><tr><td><a href="./CardinalOptions.html">CardinalOptions</a></td><td>Type</td><td>Configuration options for cardinal number conversion.</td></tr><tr><td><a href="./formatNumber.html">formatNumber</a></td><td>Function</td><td>Formats a number according to the specified mask.</td></tr><tr><td><a href="./fraction.html">fraction</a></td><td>Function</td><td>Converts a numeric input into a formatted fraction string, either in numeric or alphabetic form.</td></tr><tr><td><a href="./FractionOptions.html">FractionOptions</a></td><td>Type</td><td>Options for customizing the output and behavior of fraction number representations.</td></tr><tr><td><a href="./metricUnits.html">metricUnits</a></td><td>Function</td><td>Abbreviate a number by adding a suffix for metric units (i.e. 1000 =&gt; 1K, .0001 = 1m)</td></tr><tr><td><a href="./MetricUnitsOptions.html">MetricUnitsOptions</a></td><td>Type</td><td>Options for the <a href="./metricUnits.html">metricUnits</a> function w</td></tr><tr><td><a href="./Numbering.html">Numbering</a></td><td>Type</td><td>Options for controlling how numbers are converted to words or symbols.</td></tr><tr><td><a href="./orderOfMagnitude.html">orderOfMagnitude</a></td><td>Function</td><td>Get the spelled out word for an exponent</td></tr><tr><td><a href="./ordinal.html">ordinal</a></td><td>Function</td><td>Convert a number into an ordinal number string (1st, 2nd, 3rd, etc).</td></tr><tr><td><a href="./OrdinalOptions.html">OrdinalOptions</a></td><td>Type</td><td>Options for formatting ordinal numbers.</td></tr><tr><td><a href="./pad.html">pad</a></td><td>Function</td><td>Add leading zeros to a number to ensure a string of a minimum length</td></tr><tr><td><a href="./summarize.html">summarize</a></td><td>Function</td><td>Get a short description of a number</td></tr></tbody></table>',3)])])}const u=r(e,[["render",d]]);export{c as __pageData,u as default};
