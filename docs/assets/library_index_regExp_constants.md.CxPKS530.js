import{_ as a,c as e,o as d,ag as r}from"./chunks/framework.8SQNO8WI.js";const p=JSON.parse('{"title":"Constants","description":"","frontmatter":{},"headers":[],"relativePath":"library/index_regExp_constants.md","filePath":"library/index_regExp_constants.md"}'),n={name:"library/index_regExp_constants.md"};function s(i,t,o,l,c,h){return d(),e("div",null,[...t[0]||(t[0]=[r('<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_regExp.html">RegExp</a></p><h1 id="constants" tabindex="-1">Constants <a class="header-anchor" href="#constants" aria-label="Permalink to &quot;Constants&quot;">â€‹</a></h1><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a href="./domain.html">domain</a></td><td>Constant</td><td>Regular expression for matching a domain name composed of a host and a top-level domain (TLD).</td></tr><tr><td><a href="./email.html">email</a></td><td>Constant</td><td>validate an valid email address</td></tr><tr><td><a href="./ipV4.html">ipV4</a></td><td>Constant</td><td>validate an IPv4 address</td></tr><tr><td><a href="./ipV4Local.html">ipV4Local</a></td><td>Constant</td><td>determine if Ipv4 address is local</td></tr><tr><td><a href="./isoDate.html">isoDate</a></td><td>Constant</td><td>Validate a ISO formatted date</td></tr><tr><td><a href="./numeric.html">numeric</a></td><td>Constant</td><td>Validate a valid number</td></tr><tr><td><a href="./trimEquivalent.html">trimEquivalent</a></td><td>Constant</td><td>Regular expression that matches any whitespace character, including standard spaces, non-breaking spaces (<code>\\u00A0</code>), and zero-width no-break spaces (<code>\\uFEFF</code>). Useful for trimming or identifying whitespace-equivalent characters in strings.</td></tr></tbody></table>',3)])])}const _=a(n,[["render",s]]);export{p as __pageData,_ as default};
