import{_ as t,c as a,o as r,ag as d}from"./chunks/framework.8SQNO8WI.js";const l=JSON.parse('{"title":"Week","description":"","frontmatter":{},"headers":[],"relativePath":"library/index_time_week.md","filePath":"library/index_time_week.md"}'),i={name:"library/index_time_week.md"};function n(o,e,h,s,f,m){return r(),a("div",null,[...e[0]||(e[0]=[d('<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_time.html">Time</a></p><h1 id="week" tabindex="-1">Week <a class="header-anchor" href="#week" aria-label="Permalink to &quot;Week&quot;">â€‹</a></h1><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a href="./beginningOfWeek.html">beginningOfWeek</a></td><td>Function</td><td>Determine the start of the week for a date</td></tr><tr><td><a href="./dayOfWeek-1.html">dayOfWeek</a></td><td>Function</td><td>Determine the day of the week for a specific date</td></tr><tr><td><a href="./endOfWeek.html">endOfWeek</a></td><td>Function</td><td>Determine the last day of the week containing a date</td></tr><tr><td><a href="./isoWeekOfYear.html">isoWeekOfYear</a></td><td>Function</td><td>Determine the ISO week number for a given date</td></tr><tr><td><a href="./ISOWeekOfYearOptions.html">ISOWeekOfYearOptions</a></td><td>Type</td><td>Options for the <a href="./isoWeekOfYear.html">isoWeekOfYear</a> function</td></tr><tr><td><a href="./isoWeeksInYear.html">isoWeeksInYear</a></td><td>Function</td><td>Determine the number of ISO weeks within a year</td></tr><tr><td><a href="./ISOWeeksInYearOptions.html">ISOWeeksInYearOptions</a></td><td>Type</td><td>Options for the <a href="./isoWeeksInYear.html">isoWeeksInYear</a> function</td></tr><tr><td><a href="./isSameWeek.html">isSameWeek</a></td><td>Function</td><td>Determine if two dates occur in the same week</td></tr></tbody></table>',3)])])}const c=t(i,[["render",n]]);export{l as __pageData,c as default};
