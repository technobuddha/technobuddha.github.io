import{_ as t,c as i,o as s,ag as e}from"./chunks/framework.8SQNO8WI.js";const k=JSON.parse('{"title":"Function: isAlpha()","description":"","frontmatter":{},"headers":[],"relativePath":"library/isAlpha.md","filePath":"library/isAlpha.md"}'),r={name:"library/isAlpha.md"};function n(h,a,l,p,o,d){return s(),i("div",null,[...a[0]||(a[0]=[e('<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_string.html">String</a> &gt; <a href="./index_string_categorization.html">Categorization</a></p><h1 id="function-isalpha" tabindex="-1">Function: isAlpha() <a class="header-anchor" href="#function-isalpha" aria-label="Permalink to &quot;Function: isAlpha()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> isAlpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">input</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/is-alpha.ts#L10" target="_blank" rel="noreferrer">is-alpha.ts:10</a></p><p>Test a string for all alphabetic characters</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>input</code></td><td><code>string</code></td><td>string to test</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>boolean</code></p><p>true, if all characters in the string are alphabetic</p>',10)])])}const g=t(r,[["render",n]]);export{k as __pageData,g as default};
