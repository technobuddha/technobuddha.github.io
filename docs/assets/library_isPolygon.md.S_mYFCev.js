import{_ as t,c as a,o as i,ag as s}from"./chunks/framework.8SQNO8WI.js";const y=JSON.parse('{"title":"Function: isPolygon()","description":"","frontmatter":{},"headers":[],"relativePath":"library/isPolygon.md","filePath":"library/isPolygon.md"}'),o={name:"library/isPolygon.md"};function n(r,e,l,h,d,p){return i(),a("div",null,[...e[0]||(e[0]=[s('<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_geometry.html">Geometry</a> &gt; <a href="./index_geometry_polygon.html">Polygon</a></p><h1 id="function-ispolygon" tabindex="-1">Function: isPolygon() <a class="header-anchor" href="#function-ispolygon" aria-label="Permalink to &quot;Function: isPolygon()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> isPolygon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">object</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> object</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> is</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Polygon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/is-polygon.ts#L13" target="_blank" rel="noreferrer">is-polygon.ts:13</a></p><p>Determines if the provided object is a <code>Polygon</code>.</p><p>A <code>Polygon</code> is defined as an array where every element satisfies the <code>isCartesian</code> predicate.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>object</code></td><td><code>unknown</code></td><td>The value to test for polygon structure.</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object is Polygon</code></p><p><code>true</code> if the object is a <code>Polygon</code>, otherwise <code>false</code>.</p>',11)])])}const g=t(o,[["render",n]]);export{y as __pageData,g as default};
