import{_ as a,c as e,o as i,ag as s}from"./chunks/framework.8SQNO8WI.js";const k=JSON.parse('{"title":"Function: rotl()","description":"","frontmatter":{},"headers":[],"relativePath":"library/rotl.md","filePath":"library/rotl.md"}'),r={name:"library/rotl.md"};function n(h,t,o,l,d,p){return i(),e("div",null,[...t[0]||(t[0]=[s('<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_binary.html">Binary</a> &gt; <a href="./index_binary_arithmetic.html">Arithmetic</a></p><h1 id="function-rotl" tabindex="-1">Function: rotl() <a class="header-anchor" href="#function-rotl" aria-label="Permalink to &quot;Function: rotl()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rotl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">num</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">bits</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/rotl.ts#L10" target="_blank" rel="noreferrer">rotl.ts:10</a></p><p>Rotates the bits of a 32-bit number to the left by a specified number of bits.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>num</code></td><td><code>number</code></td><td>The 32-bit integer to rotate.</td></tr><tr><td><code>bits</code></td><td><code>number</code></td><td>The number of bits to rotate to the left.</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>number</code></p><p>The result of rotating <code>num</code> to the left by <code>bits</code> positions as an unsigned 32-bit integer.</p>',10)])])}const b=a(r,[["render",n]]);export{k as __pageData,b as default};
