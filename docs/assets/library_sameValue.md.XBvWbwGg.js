import{_ as a,c as t,o as s,ag as i}from"./chunks/framework.8SQNO8WI.js";const u=JSON.parse('{"title":"Function: sameValue()","description":"","frontmatter":{},"headers":[],"relativePath":"library/sameValue.md","filePath":"library/sameValue.md"}'),n={name:"library/sameValue.md"};function r(l,e,h,o,d,c){return s(),t("div",null,[...e[0]||(e[0]=[i('<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_object.html">Object</a> &gt; <a href="./index_object_comparison.html">Comparison</a></p><h1 id="function-samevalue" tabindex="-1">Function: sameValue() <a class="header-anchor" href="#function-samevalue" aria-label="Permalink to &quot;Function: sameValue()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sameValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/same-value.ts#L13" target="_blank" rel="noreferrer">same-value.ts:13</a></p><p>Determines whether two values are the same value, following the <a href="https://tc39.es/ecma262/#sec-samevalue" target="_blank" rel="noreferrer">SameValue</a> algorithm as defined in ECMAScript.</p><p>This function is similar to <code>Object.is</code>, handling special cases such as distinguishing between <code>+0</code> and <code>-0</code>, and treating <code>NaN</code> as equal to itself.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>x</code></td><td><code>unknown</code></td><td>The first value to compare.</td></tr><tr><td><code>y</code></td><td><code>unknown</code></td><td>The second value to compare.</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>boolean</code></p><p><code>true</code> if the values are the same according to the SameValue algorithm, otherwise <code>false</code>.</p>',11)])])}const k=a(n,[["render",r]]);export{u as __pageData,k as default};
