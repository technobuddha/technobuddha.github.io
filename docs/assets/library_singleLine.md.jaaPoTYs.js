import{_ as i,c as t,o as a,ag as s}from"./chunks/framework.8SQNO8WI.js";const k=JSON.parse('{"title":"Function: singleLine()","description":"","frontmatter":{},"headers":[],"relativePath":"library/singleLine.md","filePath":"library/singleLine.md"}'),n={name:"library/singleLine.md"};function r(l,e,h,d,p,o){return a(),t("div",null,[...e[0]||(e[0]=[s('<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_string.html">String</a> &gt; <a href="./index_string_operations.html">Operations</a></p><h1 id="function-singleline" tabindex="-1">Function: singleLine() <a class="header-anchor" href="#function-singleline" aria-label="Permalink to &quot;Function: singleLine()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> singleLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">template</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TemplateStringsArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/single-line.ts#L13" target="_blank" rel="noreferrer">single-line.ts:13</a></p><p>Joins a template literal into a single line string by removing line breaks and leading whitespace, then interleaving the provided arguments. The result is a trimmed, single-line string.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>template</code></td><td><code>TemplateStringsArray</code></td><td>The template strings array from a tagged template literal.</td></tr><tr><td>...<code>args</code></td><td><code>unknown</code>[]</td><td>The values to be interpolated into the template.</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p><p>A single-line string with all line breaks and leading whitespace removed.</p>',10)])])}const c=i(n,[["render",r]]);export{k as __pageData,c as default};
