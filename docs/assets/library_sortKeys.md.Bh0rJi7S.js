import{_ as a,c as i,o as t,ag as e}from"./chunks/framework.8SQNO8WI.js";const y=JSON.parse('{"title":"Function: sortKeys()","description":"","frontmatter":{},"headers":[],"relativePath":"library/sortKeys.md","filePath":"library/sortKeys.md"}'),h={name:"library/sortKeys.md"};function r(n,s,l,p,k,d){return t(),i("div",null,[...s[0]||(s[0]=[e(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_object.html">Object</a> &gt; <a href="./index_object_operations.html">Operations</a></p><h1 id="function-sortkeys" tabindex="-1">Function: sortKeys() <a class="header-anchor" href="#function-sortkeys" aria-label="Permalink to &quot;Function: sortKeys()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sortKeys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">object</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/sort-keys.ts#L24" target="_blank" rel="noreferrer">sort-keys.ts:24</a></p><p>Recursively sorts the keys of an object in lexicographical order.</p><p>If the input is a primitive value or an array, it is returned as-is. For objects, all keys are sorted, and the function is applied recursively to all values.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type Parameter</th><th>Description</th></tr></thead><tbody><tr><td><code>T</code> <em>extends</em> <a href="./TBJsonValue.html"><code>TBJsonValue</code></a></td><td>The type of the input value, extending JsonValue.</td></tr></tbody></table><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>object</code></td><td><code>T</code></td><td>The object or value whose keys should be sorted.</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>T</code></p><p>A new object with keys sorted, or the original value if it is a primitive or array.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sortKeys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(\\{ b: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \\}); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// returns \\{ a: 1, b: 2 \\}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sortKeys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(\\{ z: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y: \\{ b: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \\} \\}); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// returns \\{ y: \\{ a: 1, b: 2 \\}, z: 1 \\}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sortKeys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([\\{ b: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \\}, \\{ d: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, c: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \\}]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// returns [\\{ a: 1, b: 2 \\}, \\{ c: 3, d: 4 \\}]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sortKeys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">42</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// returns 42</span></span></code></pre></div>`,15)])])}const c=a(h,[["render",r]]);export{y as __pageData,c as default};
