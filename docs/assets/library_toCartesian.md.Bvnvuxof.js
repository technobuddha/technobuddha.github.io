import{_ as i,c as s,o as t,ag as e}from"./chunks/framework.8SQNO8WI.js";const c=JSON.parse('{"title":"Function: toCartesian()","description":"","frontmatter":{},"headers":[],"relativePath":"library/toCartesian.md","filePath":"library/toCartesian.md"}'),n={name:"library/toCartesian.md"};function r(h,a,l,p,o,d){return t(),s("div",null,[...a[0]||(a[0]=[e(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_geometry.html">Geometry</a> &gt; <a href="./index_geometry_coordinates.html">Coordinates</a></p><h1 id="function-tocartesian" tabindex="-1">Function: toCartesian() <a class="header-anchor" href="#function-tocartesian" aria-label="Permalink to &quot;Function: toCartesian()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> toCartesian</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">point</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Polar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UnitOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Cartesian</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/to-cartesian.ts#L18" target="_blank" rel="noreferrer">to-cartesian.ts:18</a></p><p>Convert polar coordinates to cartesian</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>point</code></td><td><a href="./Polar.html"><code>Polar</code></a></td><td>radius, angle in radians (zero points in +X direction).</td></tr><tr><td><code>options</code></td><td><a href="./UnitOptions.html"><code>UnitOptions</code></a></td><td>see <a href="./UnitOptions.html">UnitOptions</a></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./Cartesian.html"><code>Cartesian</code></a></p><p>Object containing the X and Y-distance for the angle and radius.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toCartesian</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ r: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, φ: Math.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { x: √2/2, y: √2/2 }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toCartesian</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ r: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, φ: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;degrees&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// { x: 0, y: 1 }</span></span></code></pre></div>`,12)])])}const g=i(n,[["render",r]]);export{c as __pageData,g as default};
