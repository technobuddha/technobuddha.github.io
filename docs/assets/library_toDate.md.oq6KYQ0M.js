import{_ as t,c as a,o as i,ag as n}from"./chunks/framework.8SQNO8WI.js";const k=JSON.parse('{"title":"Function: toDate()","description":"","frontmatter":{},"headers":[],"relativePath":"library/toDate.md","filePath":"library/toDate.md"}'),o={name:"library/toDate.md"};function s(r,e,d,l,c,h){return i(),a("div",null,[...e[0]||(e[0]=[n('<p><a href="./../">@technobuddha</a> &gt; <a href="./../library.html">library</a> &gt; <a href="./index_object.html">Object</a> &gt; <a href="./index_object_conversion.html">Conversion</a></p><h1 id="function-todate" tabindex="-1">Function: toDate() <a class="header-anchor" href="#function-todate" aria-label="Permalink to &quot;Function: toDate()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> toDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">entity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/library/blob/main/src/to-date.ts#L18" target="_blank" rel="noreferrer">to-date.ts:18</a></p><p>Converts an unknown entity to a <code>Date</code> object.</p><ul><li>If the entity is <code>null</code> or <code>undefined</code>, returns an invalid <code>Date</code> (<code>new Date(Number.NaN)</code>).</li><li>If the entity is already a <code>Date</code>, returns it as is.</li><li>If the entity is a <code>string</code> or <code>number</code>, attempts to create a <code>Date</code> from it.</li><li>Otherwise, converts the entity to a string and creates a <code>Date</code> from that string.</li></ul><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>entity</code></td><td><code>unknown</code></td><td>The value to convert to a <code>Date</code>.</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date" target="_blank" rel="noreferrer"><code>Date</code></a></p><p>A <code>Date</code> object representing the input, or an invalid <code>Date</code> if conversion is not possible.</p>',11)])])}const u=t(o,[["render",s]]);export{k as __pageData,u as default};
