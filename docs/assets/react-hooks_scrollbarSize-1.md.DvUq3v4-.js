import{_ as a,c as s,o as t,ag as r}from"./chunks/framework.8SQNO8WI.js";const b=JSON.parse('{"title":"Function: scrollbarSize()","description":"","frontmatter":{},"headers":[],"relativePath":"react-hooks/scrollbarSize-1.md","filePath":"react-hooks/scrollbarSize-1.md"}'),i={name:"react-hooks/scrollbarSize-1.md"};function l(o,e,n,c,h,d){return t(),s("div",null,[...e[0]||(e[0]=[r('<p><a href="./../">@technobuddha</a> &gt; <a href="./../react-hooks.html">react-hooks</a> &gt; <a href="./index_dom.html">DOM</a> &gt; <a href="./index_dom_analysis.html">Analysis</a></p><h1 id="function-scrollbarsize" tabindex="-1">Function: scrollbarSize() <a class="header-anchor" href="#function-scrollbarsize" aria-label="Permalink to &quot;Function: scrollbarSize()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> scrollbarSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ScrollbarSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/react-hooks/blob/main/src/scrollbar-size.ts#L14" target="_blank" rel="noreferrer">scrollbar-size.ts:14</a></p><p>Calculates the width and height of the browser&#39;s scrollbar.</p><p>This function creates a temporary DOM element with scrollbars, measures the difference between its offset and client dimensions, and returns the scrollbar&#39;s width and height in pixels.</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./ScrollbarSize.html"><code>ScrollbarSize</code></a></p><p><code>scrollbarWidth</code> and <code>scrollbarHeight</code>.</p>',9)])])}const k=a(i,[["render",l]]);export{b as __pageData,k as default};
