import{_ as i,c as e,o as a,ag as n}from"./chunks/framework.8SQNO8WI.js";const c=JSON.parse('{"title":"Function: useWindowSize()","description":"","frontmatter":{},"headers":[],"relativePath":"react-hooks/useWindowSize.md","filePath":"react-hooks/useWindowSize.md"}'),t={name:"react-hooks/useWindowSize.md"};function h(r,s,o,l,p,d){return a(),e("div",null,[...s[0]||(s[0]=[n(`<p><a href="./../">@technobuddha</a> &gt; <a href="./../react-hooks.html">react-hooks</a> &gt; <a href="./index_react.html">React</a> &gt; <a href="./index_react_hooks.html">Hooks</a></p><h1 id="function-usewindowsize" tabindex="-1">Function: useWindowSize() <a class="header-anchor" href="#function-usewindowsize" aria-label="Permalink to &quot;Function: useWindowSize()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useWindowSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ScrollbarSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>Defined in: <a href="https://github.com/technobuddha/react-hooks/blob/main/src/use-window-size.ts#L16" target="_blank" rel="noreferrer">use-window-size.ts:16</a></p><p>Gets the current window size, including the dimensions of the scroll bars.</p><p>Also returns a <code>count</code> property, which increments each time the window is resized (since mount).</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./ScrollbarSize.html"><code>ScrollbarSize</code></a> &amp; { <code>height</code>: <code>number</code>; <code>width</code>: <code>number</code>; } &amp; { <code>count</code>: <code>number</code>; }</p><p>width, height, scrollbarWidth, scrollbarHeight, count</p>`,9)])])}const u=i(t,[["render",h]]);export{c as __pageData,u as default};
